[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://x5kqsv2e4wir"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q3cvs"]
input_name = "node_position_world"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2wuvb"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mxlov"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_pubi3"]
function = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// Input:14
	vec3 n_out14p0 = NODE_POSITION_WORLD;


// VectorOp:15
	vec3 n_in15p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out15p0 = n_out14p0 * n_in15p1;


// VectorOp:16
	vec3 n_in16p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out16p0 = n_out15p0 + n_in16p1;


// VectorFunc:17
	vec3 n_out17p0 = max(min(n_out16p0, vec3(1.0)), vec3(0.0));


// Output:0
	ALBEDO = n_out17p0;


}
"
graph_offset = Vector2(-169.33, -32.983)
nodes/vertex/0/position = Vector2(120, 440)
nodes/fragment/0/position = Vector2(1260, 320)
nodes/fragment/14/node = SubResource("VisualShaderNodeInput_q3cvs")
nodes/fragment/14/position = Vector2(240, 300)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_2wuvb")
nodes/fragment/15/position = Vector2(600, 240)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_mxlov")
nodes/fragment/16/position = Vector2(840, 240)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorFunc_pubi3")
nodes/fragment/17/position = Vector2(1040, 280)
nodes/fragment/connections = PackedInt32Array(14, 0, 15, 0, 15, 0, 16, 0, 16, 0, 17, 0, 17, 0, 0, 0)
